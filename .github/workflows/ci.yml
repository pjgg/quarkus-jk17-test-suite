name: "Pull Request CI"
on:
  - pull_request
jobs:
  build-dependencies:
    name: Build Dependencies
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
    steps:
      - uses: sdkman/sdkman-action@master
        id: sdkman
        with:
          candidate: java
          version: 17.ea.3.pma-open
      - uses: actions/setup-java@v1
        id: setup-java
        with:
          java-version: 17.0.0
          jdkFile: ${{ steps.sdkman.outputs.file }}
      - run: java --version
      - name: Build Quarkus main
        run: |
          git clone https://github.com/quarkusio/quarkus.git && cd quarkus && ./mvnw -B -s .github/mvn-settings.xml clean install -Dquickly
      - name: Tar Maven Repo
        shell: bash
        run: tar -I 'pigz -9' -cf maven-repo.tgz -C ~ .m2/repository
      - name: Persist Maven Repo
        uses: actions/upload-artifact@v1
        with:
          name: maven-repo
          path: maven-repo.tgz
  linux-validate-format:
    name: Linux - Validate format
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
    needs: [ build-dependencies ]
    steps:
      - uses: sdkman/sdkman-action@master
        id: sdkman
        with:
          candidate: java
          version: 17.ea.3.pma-open
      - uses: actions/setup-java@v1
        id: setup-java
        with:
          java-version: 17.0.0
          jdkFile: ${{ steps.sdkman.outputs.file }}
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Download Maven Repo
        uses: actions/download-artifact@v1
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Build with Maven
        run: |
          mvn -V -B -s .github/mvn-settings.xml verify -Dvalidate-format -DskipTests -DskipITs
  linux-build-jvm-latest:
    name: PR - Linux - JVM build - Latest Version
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
    needs: [ build-dependencies, linux-validate-format ]
    steps:
      - uses: sdkman/sdkman-action@master
        id: sdkman
        with:
          candidate: java
          version: 17.ea.3.pma-open
      - uses: actions/setup-java@v1
        id: setup-java
        with:
          java-version: 17.0.0
          jdkFile: ${{ steps.sdkman.outputs.file }}
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Download Maven Repo
        uses: actions/download-artifact@v1
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Build Quarkus CLI
        run: |
          git clone https://github.com/quarkusio/quarkus.git && cd quarkus/devtools/cli && mvn -B -s ../../../.github/mvn-settings.xml clean install -Dquickly
      - name: Install Quarkus CLI
        run: |
          cat <<EOF > ./quarkus-dev-cli
          #!/bin/bash
          java -jar $PWD/quarkus/devtools/cli/target/quarkus-cli-999-SNAPSHOT-runner.jar "\$@"
          EOF
          chmod +x ./quarkus-dev-cli
      - name: Build with Maven
        run: mvn -fae -V -B -s .github/mvn-settings.xml clean verify -Dinclude.quarkus-cli-tests -Dts.quarkus.cli.cmd="${PWD}/quarkus-dev-cli"
      - name: Zip Artifacts
        if: failure()
        run: |
          zip -R artifacts-latest-linux-jvm17.zip '*-reports/*'
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: ci-artifacts
          path: artifacts-latest-linux-jvm17.zip
